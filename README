MEADRE

working with openPCL for point cloud segmentation, the workflow is as follows

depends:
				openPCL
				boost (for filesystem libs)


1) obtain point clouds from camera / projector system 
	 merge and register these clouds (not done yet)
	 
	 pcd_write: creates NCAMERAS pcd files from a binary depth map, this file is
	 defined as: <I:npts> <I:height> <I:width> npoints*{<f:px> <f:py> <f:pz>}
	 
	 pcd_write will split the given depth image and output them into outpathx
	 
	 
2) segment full point cloud into separate clouds each one representing
	 a cube
	 
	 cloud cluster will read a pcd file and do this arguments are: inputfile outputpath

3) for each segmented file attempt to figure out the actual cube it represents 
	 in the world space. There are a variety of putative methods
			
	 icp_cubes.cpp: compare cube methods, generate a substitute cube. Using icp the substitue cube is aligned to the test cube obtained from segmentation, this outputs a pcd/cbin file representing the final orientation of the icp alg and also the world transformation matrix. 
	 
3.5) this can be done with fitCubes.py, this will produce a set of pcd files which contain the rotated test cube, these can be  
		 used for debugging. Rotation matrices are output as transformaiton_<id>.txt files

4) centroids can be extracted from the fourth col of the tranform files with grabCentroids.py

need:
				a method to figure out which extractions didn't work well
				estimate min cluster size for successful icp reon
				well perhaps at get rough-centroid, if not orientation
				something to fix these bad cubes
		

notes: 
			 filtering in segmentation is probably a very bad idea, seem to be losing the outlying points	 
			
		  